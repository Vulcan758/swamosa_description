<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro" name="swarmosa">

  <xacro:property name="base_width" value="0.16"/>
  <xacro:property name="base_len" value="0.16"/>
  <xacro:property name="wheel_radius" value="0.035"/>
  <xacro:property name="base_wheel_gap" value="0.007"/>
  <xacro:property name="wheel_separation" value="0.15"/>
  <xacro:property name="wheel_joint_offset" value="0.02"/>

  <xacro:property name="caster_wheel_radius" value="${wheel_radius/2}"/>
  <xacro:property name="caster_wheel_mass" value="0.001"/>
  <xacro:property name="caster_wheel_joint_offset" value="-0.052"/>

  <!--Color Properties-->
  <material name="blue">
    <color rgba="0 0 0.8 1"/>
  </material>
  <material name="black">
    <color rgba="0 0 0 1"/>
  </material>
  <material name="white">
    <color rgba="1 1 1 1"/>
  </material>
  <material name="red">
    <color rgba="0.8 0.0 0.0 1.0"/>
  </material>

  <!--Interial macros-->
   <xacro:macro name="box_inertia" params="m w h d">
    <inertial>
      <origin xyz="0 0 0" rpy="${pi/2} 0 ${pi/2}"/>      
      <mass value="${m}"/>
      <inertia ixx="${(m/12) * (h*h + d*d)}" ixy="0.0" ixz="0.0" iyy="${(m/12) * (w*w + d*d)}" iyz="0.0" izz="${(m/12) * (w*w + h*h)}"/>
    </inertial>
  </xacro:macro>

  <xacro:macro name="cylinder_inertia" params="m r h">
    <inertial>
      <origin xyz="0 0 0" rpy="${pi/2} 0 0" />      
      <mass value="${m}"/>
      <inertia ixx="${(m/12) * (3*r*r + h*h)}" ixy = "0" ixz = "0" iyy="${(m/12) * (3*r*r + h*h)}" iyz = "0" izz="${(m/2) * (r*r)}"/> 
    </inertial>
  </xacro:macro>

  <xacro:macro name="sphere_inertia" params="m r">
    <inertial>
      <mass value="${m}"/>
      <inertia ixx="${(2/5) * m * (r*r)}" ixy="0.0" ixz="0.0" iyy="${(2/5) * m * (r*r)}" iyz="0.0" izz="${(2/5) * m * (r*r)}"/>
    </inertial>
  </xacro:macro>

  <!--Base Footprint-->
  <link name="base_footprint">
    <xacro:box_inertia m="10" w="0.001" h="0.001" d="0.001"/>
    <visual>
        <origin xyz="0 0 0" rpy="0 0 0" />
        <geometry>
            <box size="0.001 0.001 0.001" />
        </geometry>
    </visual>
  </link>

  <!--Base link-->
  <link name="base_link">
    <xacro:box_inertia m="10" w="${base_len}" h="${base_width}" d="0.01"/>
    <visual>
      <geometry>
        <box size="${base_len} ${base_width} 0.01"/>
      </geometry>
      <material name="black"/>
    </visual>
    <collision>
      <geometry>
        <box size="${base_len} ${base_width} 0.01"/>
      </geometry>
    </collision>
  </link>

  <!--base_link to base_footprint Joint-->
  <joint name="base_link_joint" type="fixed">
    <origin xyz="0 0 ${wheel_radius + 0.005}" rpy="0 0 0" />
    <parent link="base_footprint"/>
    <child link="base_link" />
  </joint>

  <xacro:macro name="wheel" params="prefix x_reflect y_reflect">
    <link name="${prefix}_link">
      <visual>
        <origin xyz="0 0 0" rpy="${pi/2} 0 0"/>
        <geometry>
            <cylinder radius="${wheel_radius}" length="0.005"/>
        </geometry>
        <material name="Gray">
          <color rgba="0.5 0.5 0.5 1.0"/>
        </material>
      </visual>

      <collision>
        <origin xyz="0 0 0" rpy="${pi/2} 0 0"/> 
        <geometry>
          <cylinder radius="${wheel_radius}" length="0.005"/>
        </geometry>
      </collision>

      <xacro:cylinder_inertia m="0.5" r="${wheel_radius}" h="0.005"/>
    </link>

    <joint name="${prefix}_joint" type="continuous">
      <parent link="base_link"/>
      <child link="${prefix}_link"/>
      <origin xyz="${x_reflect*wheel_joint_offset} ${y_reflect*(base_width/2+base_wheel_gap)} 0.005" rpy="0 0 0"/>
      <axis xyz="0 1 0"/>
    </joint>
  </xacro:macro>

  <xacro:wheel prefix="left" x_reflect="-1" y_reflect="1" />
  <xacro:wheel prefix="right" x_reflect="-1" y_reflect="-1" />

  <!--Caster Wheel Link-->
  <link name="caster_wheel">
    <visual>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <sphere radius="${caster_wheel_radius}"/>
      </geometry>
      <material name="blue"/>
    </visual>
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <sphere radius="${caster_wheel_radius}"/>
      </geometry>
    </collision>
    <xacro:sphere_inertia m="10" r="${caster_wheel_radius}"/>
  </link>

  <!--Caster Wheel Joint-->
  <joint name="caster_wheel_joint" type="continuous">
    <axis xyz="0 1 0" rpy="0 0 0" />
    <parent link="base_link"/>
    <child link="caster_wheel"/>
    <origin xyz="${caster_wheel_joint_offset} 0 -${caster_wheel_radius+0.005}" rpy="0 0 0"/>
  </joint>

  <xacro:property name="laser_size_x" value="0.03"/>
  <xacro:property name="laser_size_y" value="0.03"/>
  <xacro:property name="laser_size_z" value="0.04"/>
  <xacro:property name="laser_origin_x" value="0.065"/>
  <xacro:property name="laser_origin_y" value="0"/>
  <xacro:property name="laser_origin_z" value="0.035"/>

  <link name="sensor_laser">
    <visual>
      <geometry>
        <box size="${laser_size_x} ${laser_size_y} ${laser_size_z}"/>
      </geometry>
      <material name="blue"/>
    </visual>
    <!--visual>
      <geometry>
        <mesh filename="package:///meshes/hokuyo.dae"/>
      </geometry>
    </visual-->
    <collision>
      <geometry>
        <box size="${laser_size_x} ${laser_size_y} ${laser_size_z}"/>
      </geometry>
    </collision>
    <xacro:box_inertia m="0.2" w="${laser_size_x}" h="${laser_size_y}" d="${laser_size_z}"/>
  </link>

  <joint name="sensor_laser_joint" type="fixed">
    <origin xyz="${laser_origin_x} ${laser_origin_y} ${laser_origin_z}" rpy="0 0 0" />
    <parent link="base_link"/>
    <child link="sensor_laser" />
  </joint>

  <link name="imu_link">
  <visual>
    <geometry>
      <box size="0.01 0.01 0.01"/>
    </geometry>
  </visual>

  <collision>
    <geometry>
      <box size="0.01 0.01 0.01"/>
    </geometry>
  </collision>

  <xacro:box_inertia m="0.1" w="0.01" d="0.01" h="0.01"/>
</link>

<joint name="imu_joint" type="fixed">
  <parent link="base_link"/>
  <child link="imu_link"/>
  <origin xyz="-0.05 0 0.01"/>
</joint>

 <gazebo reference="imu_link">
  <sensor name="imu_sensor" type="imu">
   <plugin filename="libgazebo_ros_imu_sensor.so" name="imu_plugin">
      <ros>
        <namespace>/swarmosa</namespace>
        <remapping>~/out:=imu</remapping>
      </ros>
      <initial_orientation_as_reference>false</initial_orientation_as_reference>
    </plugin>
    <always_on>true</always_on>
    <update_rate>100</update_rate>
    <visualize>true</visualize>
    <imu>
      <angular_velocity>
        <x>
          <noise type="gaussian">
            <mean>0.0</mean>
            <stddev>2e-4</stddev>
            <bias_mean>0.0000075</bias_mean>
            <bias_stddev>0.0000008</bias_stddev>
          </noise>
        </x>
        <y>
          <noise type="gaussian">
            <mean>0.0</mean>
            <stddev>2e-4</stddev>
            <bias_mean>0.0000075</bias_mean>
            <bias_stddev>0.0000008</bias_stddev>
          </noise>
        </y>
        <z>
          <noise type="gaussian">
            <mean>0.0</mean>
            <stddev>2e-4</stddev>
            <bias_mean>0.0000075</bias_mean>
            <bias_stddev>0.0000008</bias_stddev>
          </noise>
        </z>
      </angular_velocity>
      <linear_acceleration>
        <x>
          <noise type="gaussian">
            <mean>0.0</mean>
            <stddev>1.7e-2</stddev>
            <bias_mean>0.1</bias_mean>
            <bias_stddev>0.001</bias_stddev>
          </noise>
        </x>
        <y>
          <noise type="gaussian">
            <mean>0.0</mean>
            <stddev>1.7e-2</stddev>
            <bias_mean>0.1</bias_mean>
            <bias_stddev>0.001</bias_stddev>
          </noise>
        </y>
        <z>
          <noise type="gaussian">
            <mean>0.0</mean>
            <stddev>1.7e-2</stddev>
            <bias_mean>0.1</bias_mean>
            <bias_stddev>0.001</bias_stddev>
          </noise>
        </z>
      </linear_acceleration>
    </imu>
  </sensor>
</gazebo>

  <xacro:include filename="$(find swarmosa_description)/src/description/swarmosa_gazebo.xacro"/>

</robot>